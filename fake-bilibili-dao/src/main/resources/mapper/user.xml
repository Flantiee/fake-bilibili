<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fake.bilibili.dao.UserDao">

    <update id="updateUsers" parameterType="com.fake.bilibili.domain.UserInfo">
        update
        t_user
        set
        <if test="phone != null and phone != '' ">
            phone = #{phone},
        </if>
        <if test="email != null and email != '' ">
            email = #{email},
        </if>
        <if test="password != null and password != '' ">
            password = #{password},
        </if>
        updateTime = #{updateTime}
        where
        id = #{id}
    </update>
    <update id="updateUserInfo" parameterType="com.fake.bilibili.domain.UserInfo">
        update
        t_user_info
        set
        <if test="nick != null and nick != '' ">
            nick = #{nick},
        </if>
        <if test="avatar != null">
            avatar = #{avatar},
        </if>
        <if test="sign != null">
            sign = #{sign},
        </if>
        <if test="birth != null and birth != '' ">
            birth = #{birth},
        </if>
        <if test="gender != null and gender != '' ">
            gender = #{gender},
        </if>
        updateTime = #{updateTime}
        where
        userId = #{userId}
    </update>

    <delete id="deleteRefreshToken">
        delete from
            t_refresh_token
        where
            refreshToken = #{refreshToken}
    </delete>


    <select id="getUserByPhone" parameterType="java.lang.String" resultType="com.fake.bilibili.domain.User">
        SELECT * FROM t_user WHERE phone = #{phone}
    </select>

    <select id="getUserById" parameterType="java.lang.Long" resultType="com.fake.bilibili.domain.User">
        SELECT * FROM t_user WHERE id = #{id}
    </select>

    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="com.fake.bilibili.domain.UserInfo">
        SELECT * FROM t_user_info WHERE userId = #{userId}
    </select>
    <select id="getUserInfoByUserIds" resultType="com.fake.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            1=1
            <if test="userIdList != null and userIdList.size > 0">
                and userId in 
                <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
    </select>
    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from t_user_info
        where 1=1
        <if test="nick != null and nick != ''">
            and nick like '%${nick}%'
        </if>
    </select>
    <select id="pageListUserInfos" parameterType="java.util.Map" resultType="com.fake.bilibili.domain.UserInfo">
        select *
        from t_user_info
        where 1=1
            <if test="nick != null and nick != ''">
                and nick like '%${nick}%'
            </if>
        order by id desc
        limit #{start}, #{limit}
    </select>
    <select id="getRefreshTokenDetail" parameterType="java.lang.String" resultType="com.fake.bilibili.domain.RefreshTokenDetail">
        select *
        from t_refresh_token
        where
            refreshToken = #{refreshToken}
    </select>

    <insert id="addUser" parameterType="com.fake.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into
            t_user(
                   phone,
                   email,
                   password,
                   salt,
                   createTime
                   )values(
                    #{phone},
                    #{email},
                    #{password},
                    #{salt},
                    #{createTime}
                    )
    </insert>
    <insert id="addUserInfo" parameterType="com.fake.bilibili.domain.UserInfo" useGeneratedKeys="true" keyProperty="id" >
        insert into
            t_user_info(
                userId,
                nick,
                avatar,
                sign,
                gender,
                birth,
                createTime
            )values(
                #{userId},
                #{nick},
                #{avatar},
                #{sign},
                #{gender},
                #{birth},
                #{createTime}
                )
    </insert>
<!--    我们在前面用了 @Parma所以这就不写paramType-->
    <insert id="addRefreshToken" >
        insert into
            t_refresh_token(
                refreshToken,
                userId,
                createTime
        )values (
                #{refreshToken},
                #{userId},
                #{createTime}
        )
    </insert>
</mapper>